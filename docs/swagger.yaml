basePath: /api/v1
definitions:
  controller.AddQuestionParam:
    properties:
      name:
        type: string
      nestedParam:
        $ref: '#/definitions/controller.NestedParam'
        type: object
    required:
    - name
    type: object
  controller.NestedParam:
    properties:
      nested1:
        type: string
      nested2:
        type: integer
    required:
    - nested2
    type: object
  model.Account:
    properties:
      age:
        type: integer
      pass:
        type: string
      userName:
        type: string
    type: object
  model.Area:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Area'
        type: array
      code:
        description: 区域编码
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        description: '*gorm.Model'
        type: integer
      name:
        description: 区域名称
        type: string
      parent:
        $ref: '#/definitions/model.Area'
        type: object
      parent_id:
        description: 父级编号
        type: integer
      parent_ids:
        description: 所有父级编号
        type: string
      type:
        description: 区域类型（1：国家；2：省份、直辖市；3：地市；4：区县）
        type: string
      updated_at:
        type: string
    type: object
  model.Article:
    properties:
      addDate:
        description: 创建时间
        type: string
      body:
        description: 内容
        type: string
      description:
        description: 描述
        type: string
      nickName:
        description: 用户昵称
        type: string
      origin:
        description: 用户名
        type: string
      picture:
        description: 图片
        type: string
      postType:
        description: 文章类型
        type: string
      status:
        description: 状态
        type: integer
      subject:
        description: 标题
        type: string
      userID:
        description: 用户ID
        type: integer
      visited:
        description: 访问次数
        type: integer
    type: object
  model.QuestionLibrary:
    properties:
      difficulty:
        type: integer
      inspectPoint:
        type: string
      questionType:
        type: integer
      securityLevel:
        type: integer
      status:
        type: integer
      subject:
        type: integer
      techType:
        type: integer
    type: object
  protocol.AccountPaginator:
    properties:
      limit:
        type: integer
      next_page:
        type: integer
      offset:
        type: integer
      page:
        type: integer
      prev_page:
        type: integer
      records:
        items:
          $ref: '#/definitions/model.Account'
        type: array
      total_page:
        type: integer
      total_record:
        type: integer
    type: object
  protocol.AreaCreationParam:
    properties:
      code:
        description: 区域编码
        type: string
      name:
        description: 区域名称
        type: string
      parent_id:
        description: 父级编号
        type: integer
      type:
        description: 区域类型（1：国家；2：省份、直辖市；3：地市；4：区县）
        type: string
    type: object
  protocol.AreaPaginator:
    properties:
      limit:
        type: integer
      next_page:
        type: integer
      offset:
        type: integer
      page:
        type: integer
      prev_page:
        type: integer
      records:
        items:
          $ref: '#/definitions/model.Area'
        type: array
      total_page:
        type: integer
      total_record:
        type: integer
    type: object
  protocol.ArticlePaginator:
    properties:
      limit:
        type: integer
      next_page:
        type: integer
      offset:
        type: integer
      page:
        type: integer
      prev_page:
        type: integer
      records:
        items:
          $ref: '#/definitions/model.Article'
        type: array
      total_page:
        type: integer
      total_record:
        type: integer
    type: object
  protocol.Error:
    properties:
      code:
        example: 10001
        type: integer
      message:
        example: Some Error
        type: string
    type: object
  protocol.QuestionLibraryPaginator:
    properties:
      limit:
        type: integer
      next_page:
        type: integer
      offset:
        type: integer
      page:
        type: integer
      prev_page:
        type: integer
      records:
        items:
          $ref: '#/definitions/model.QuestionLibrary'
        type: array
      total_page:
        type: integer
      total_record:
        type: integer
    type: object
  protocol.Success:
    properties:
      code:
        example: 10000
        type: integer
      message:
        example: Success
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is an api server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VCMS API
  version: "1.0"
paths:
  /account:
    get:
      consumes:
      - application/json
      description: get Account libs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.AccountPaginator'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: List Account
      tags:
      - account
  /areas:
    get:
      consumes:
      - application/json
      description: get areas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/protocol.AreaPaginator'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: List Area
      tags:
      - area
    put:
      consumes:
      - application/json
      description: Create an area
      parameters:
      - description: Add Area
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/protocol.AreaCreationParam'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/protocol.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: Create an area
      tags:
      - area
  /article:
    get:
      consumes:
      - application/json
      description: get Articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ArticlePaginator'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: List Article
      tags:
      - article
  /question-libraries:
    get:
      consumes:
      - application/json
      description: get question libs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.QuestionLibraryPaginator'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: List question libs
      tags:
      - question-libraries
    put:
      consumes:
      - application/json
      description: add by json question lib
      parameters:
      - description: Add QuestionLibrary
        in: body
        name: questionLib
        required: true
        schema:
          $ref: '#/definitions/controller.AddQuestionParam'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QuestionLibrary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: Add a question lib
      tags:
      - question-libraries
  /question-libraries/{id}:
    patch:
      consumes:
      - application/json
      description: Update by json question lib
      parameters:
      - description: QuestionLib ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update account
        in: body
        name: questionLib
        required: true
        schema:
          $ref: '#/definitions/model.QuestionLibrary'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QuestionLibrary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/protocol.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.Error'
      summary: Update a question lib
      tags:
      - question-libraries
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
