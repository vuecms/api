// Code generated by go-queryset. DO NOT EDIT.
package model

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set AreaQuerySet

// AreaQuerySet is an queryset type for Area
type AreaQuerySet struct {
	db *gorm.DB
}

// NewAreaQuerySet constructs new AreaQuerySet
func NewAreaQuerySet(db *gorm.DB) AreaQuerySet {
	return AreaQuerySet{
		db: db.Model(&Area{}),
	}
}

func (qs AreaQuerySet) w(db *gorm.DB) AreaQuerySet {
	return NewAreaQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) All(ret *[]Area) error {
	return qs.db.Find(ret).Error
}

// CodeEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CodeEq(code string) AreaQuerySet {
	return qs.w(qs.db.Where("code = ?", code))
}

// CodeIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CodeIn(code ...string) AreaQuerySet {
	if len(code) == 0 {
		qs.db.AddError(errors.New("must at least pass one code in CodeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("code IN (?)", code))
}

// CodeNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CodeNe(code string) AreaQuerySet {
	return qs.w(qs.db.Where("code != ?", code))
}

// CodeNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CodeNotIn(code ...string) AreaQuerySet {
	if len(code) == 0 {
		qs.db.AddError(errors.New("must at least pass one code in CodeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("code NOT IN (?)", code))
}

// Count is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Area) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtEq(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtGt(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtGte(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtLt(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtLte(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) CreatedAtNe(createdAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Area) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) Delete() error {
	return qs.db.Delete(Area{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Area{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Area{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtEq(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtGt(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtGte(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtIsNotNull() AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtIsNull() AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtLt(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtLte(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) DeletedAtNe(deletedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) GetUpdater() AreaUpdater {
	return NewAreaUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDEq(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDGt(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDGte(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDIn(ID ...uint) AreaQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDLt(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDLte(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDNe(ID uint) AreaQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) IDNotIn(ID ...uint) AreaQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) Limit(limit int) AreaQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) NameEq(name string) AreaQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) NameIn(name ...string) AreaQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) NameNe(name string) AreaQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) NameNotIn(name ...string) AreaQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) Offset(offset int) AreaQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs AreaQuerySet) One(ret *Area) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderAscByCreatedAt() AreaQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderAscByDeletedAt() AreaQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderAscByID() AreaQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByParentID is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderAscByParentID() AreaQuerySet {
	return qs.w(qs.db.Order("parent_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderAscByUpdatedAt() AreaQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderDescByCreatedAt() AreaQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderDescByDeletedAt() AreaQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderDescByID() AreaQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByParentID is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderDescByParentID() AreaQuerySet {
	return qs.w(qs.db.Order("parent_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) OrderDescByUpdatedAt() AreaQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// ParentIDEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDEq(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id = ?", parentID))
}

// ParentIDGt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDGt(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id > ?", parentID))
}

// ParentIDGte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDGte(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id >= ?", parentID))
}

// ParentIDIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDIn(parentID ...uint) AreaQuerySet {
	if len(parentID) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentID in ParentIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_id IN (?)", parentID))
}

// ParentIDLt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDLt(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id < ?", parentID))
}

// ParentIDLte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDLte(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id <= ?", parentID))
}

// ParentIDNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDNe(parentID uint) AreaQuerySet {
	return qs.w(qs.db.Where("parent_id != ?", parentID))
}

// ParentIDNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIDNotIn(parentID ...uint) AreaQuerySet {
	if len(parentID) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentID in ParentIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_id NOT IN (?)", parentID))
}

// ParentIdsEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIdsEq(parentIds string) AreaQuerySet {
	return qs.w(qs.db.Where("parent_ids = ?", parentIds))
}

// ParentIdsIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIdsIn(parentIds ...string) AreaQuerySet {
	if len(parentIds) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentIds in ParentIdsIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_ids IN (?)", parentIds))
}

// ParentIdsNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIdsNe(parentIds string) AreaQuerySet {
	return qs.w(qs.db.Where("parent_ids != ?", parentIds))
}

// ParentIdsNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIdsNotIn(parentIds ...string) AreaQuerySet {
	if len(parentIds) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentIds in ParentIdsNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_ids NOT IN (?)", parentIds))
}

// ParentIsNotNull is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIsNotNull() AreaQuerySet {
	return qs.w(qs.db.Where("parent IS NOT NULL"))
}

// ParentIsNull is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) ParentIsNull() AreaQuerySet {
	return qs.w(qs.db.Where("parent IS NULL"))
}

// PreloadParent is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) PreloadParent() AreaQuerySet {
	return qs.w(qs.db.Preload("Parent"))
}

// SetCode is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetCode(code string) AreaUpdater {
	u.fields[string(AreaDBSchema.Code)] = code
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetCreatedAt(createdAt time.Time) AreaUpdater {
	u.fields[string(AreaDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetDeletedAt(deletedAt *time.Time) AreaUpdater {
	u.fields[string(AreaDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetID(ID uint) AreaUpdater {
	u.fields[string(AreaDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetName(name string) AreaUpdater {
	u.fields[string(AreaDBSchema.Name)] = name
	return u
}

// SetParentID is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetParentID(parentID uint) AreaUpdater {
	u.fields[string(AreaDBSchema.ParentID)] = parentID
	return u
}

// SetParentIds is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetParentIds(parentIds string) AreaUpdater {
	u.fields[string(AreaDBSchema.ParentIds)] = parentIds
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetType(typeValue string) AreaUpdater {
	u.fields[string(AreaDBSchema.Type)] = typeValue
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u AreaUpdater) SetUpdatedAt(updatedAt time.Time) AreaUpdater {
	u.fields[string(AreaDBSchema.UpdatedAt)] = updatedAt
	return u
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) TypeEq(typeValue string) AreaQuerySet {
	return qs.w(qs.db.Where("type = ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) TypeIn(typeValue ...string) AreaQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type IN (?)", typeValue))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) TypeNe(typeValue string) AreaQuerySet {
	return qs.w(qs.db.Where("type != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) TypeNotIn(typeValue ...string) AreaQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type NOT IN (?)", typeValue))
}

// Update is an autogenerated method
// nolint: dupl
func (u AreaUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u AreaUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtEq(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtGt(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtGte(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtLt(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtLte(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs AreaQuerySet) UpdatedAtNe(updatedAt time.Time) AreaQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set AreaQuerySet

// ===== BEGIN of Area modifiers

// AreaDBSchemaField describes database schema field. It requires for method 'Update'
type AreaDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f AreaDBSchemaField) String() string {
	return string(f)
}

// AreaDBSchema stores db field names of Area
var AreaDBSchema = struct {
	ID        AreaDBSchemaField
	CreatedAt AreaDBSchemaField
	UpdatedAt AreaDBSchemaField
	DeletedAt AreaDBSchemaField
	Parent    AreaDBSchemaField
	ParentID  AreaDBSchemaField
	ParentIds AreaDBSchemaField
	Code      AreaDBSchemaField
	Name      AreaDBSchemaField
	Type      AreaDBSchemaField
}{

	ID:        AreaDBSchemaField("id"),
	CreatedAt: AreaDBSchemaField("created_at"),
	UpdatedAt: AreaDBSchemaField("updated_at"),
	DeletedAt: AreaDBSchemaField("deleted_at"),
	Parent:    AreaDBSchemaField("parent"),
	ParentID:  AreaDBSchemaField("parent_id"),
	ParentIds: AreaDBSchemaField("parent_ids"),
	Code:      AreaDBSchemaField("code"),
	Name:      AreaDBSchemaField("name"),
	Type:      AreaDBSchemaField("type"),
}

// Update updates Area fields by primary key
// nolint: dupl
func (o *Area) Update(db *gorm.DB, fields ...AreaDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"parent":     o.Parent,
		"parent_id":  o.ParentID,
		"parent_ids": o.ParentIds,
		"code":       o.Code,
		"name":       o.Name,
		"type":       o.Type,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Area %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// AreaUpdater is an Area updates manager
type AreaUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewAreaUpdater creates new Area updater
// nolint: dupl
func NewAreaUpdater(db *gorm.DB) AreaUpdater {
	return AreaUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Area{}),
	}
}

// ===== END of Area modifiers

// ===== BEGIN of query set DepartmentQuerySet

// DepartmentQuerySet is an queryset type for Department
type DepartmentQuerySet struct {
	db *gorm.DB
}

// NewDepartmentQuerySet constructs new DepartmentQuerySet
func NewDepartmentQuerySet(db *gorm.DB) DepartmentQuerySet {
	return DepartmentQuerySet{
		db: db.Model(&Department{}),
	}
}

func (qs DepartmentQuerySet) w(db *gorm.DB) DepartmentQuerySet {
	return NewDepartmentQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) All(ret *[]Department) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Department) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtEq(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtGt(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtGte(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtLt(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtLte(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) CreatedAtNe(createdAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) Delete() error {
	return qs.db.Delete(Department{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Department) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Department{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Department{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtEq(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtGt(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtGte(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtIsNotNull() DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtIsNull() DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtLt(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtLte(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) DeletedAtNe(deletedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) GetUpdater() DepartmentUpdater {
	return NewDepartmentUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDEq(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDGt(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDGte(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDIn(ID ...uint) DepartmentQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDLt(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDLte(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDNe(ID uint) DepartmentQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) IDNotIn(ID ...uint) DepartmentQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) Limit(limit int) DepartmentQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) NameEq(name string) DepartmentQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) NameIn(name ...string) DepartmentQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) NameNe(name string) DepartmentQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) NameNotIn(name ...string) DepartmentQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) Offset(offset int) DepartmentQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs DepartmentQuerySet) One(ret *Department) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderAscByCreatedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderAscByDeletedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderAscByID() DepartmentQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByOrganizationID is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderAscByOrganizationID() DepartmentQuerySet {
	return qs.w(qs.db.Order("organization_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderAscByUpdatedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderDescByCreatedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderDescByDeletedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderDescByID() DepartmentQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByOrganizationID is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderDescByOrganizationID() DepartmentQuerySet {
	return qs.w(qs.db.Order("organization_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrderDescByUpdatedAt() DepartmentQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrganizationIDEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDEq(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id = ?", organizationID))
}

// OrganizationIDGt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDGt(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id > ?", organizationID))
}

// OrganizationIDGte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDGte(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id >= ?", organizationID))
}

// OrganizationIDIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDIn(organizationID ...int) DepartmentQuerySet {
	if len(organizationID) == 0 {
		qs.db.AddError(errors.New("must at least pass one organizationID in OrganizationIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("organization_id IN (?)", organizationID))
}

// OrganizationIDLt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDLt(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id < ?", organizationID))
}

// OrganizationIDLte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDLte(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id <= ?", organizationID))
}

// OrganizationIDNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDNe(organizationID int) DepartmentQuerySet {
	return qs.w(qs.db.Where("organization_id != ?", organizationID))
}

// OrganizationIDNotIn is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) OrganizationIDNotIn(organizationID ...int) DepartmentQuerySet {
	if len(organizationID) == 0 {
		qs.db.AddError(errors.New("must at least pass one organizationID in OrganizationIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("organization_id NOT IN (?)", organizationID))
}

// PreloadOrganization is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) PreloadOrganization() DepartmentQuerySet {
	return qs.w(qs.db.Preload("Organization"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetCreatedAt(createdAt time.Time) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetDeletedAt(deletedAt *time.Time) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetID(ID uint) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetName(name string) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.Name)] = name
	return u
}

// SetOrganization is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetOrganization(organization Organization) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.Organization)] = organization
	return u
}

// SetOrganizationID is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetOrganizationID(organizationID int) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.OrganizationID)] = organizationID
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) SetUpdatedAt(updatedAt time.Time) DepartmentUpdater {
	u.fields[string(DepartmentDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u DepartmentUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtEq(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtGt(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtGte(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtLt(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtLte(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs DepartmentQuerySet) UpdatedAtNe(updatedAt time.Time) DepartmentQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set DepartmentQuerySet

// ===== BEGIN of Department modifiers

// DepartmentDBSchemaField describes database schema field. It requires for method 'Update'
type DepartmentDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f DepartmentDBSchemaField) String() string {
	return string(f)
}

// DepartmentDBSchema stores db field names of Department
var DepartmentDBSchema = struct {
	ID             DepartmentDBSchemaField
	CreatedAt      DepartmentDBSchemaField
	UpdatedAt      DepartmentDBSchemaField
	DeletedAt      DepartmentDBSchemaField
	Name           DepartmentDBSchemaField
	Organization   DepartmentDBSchemaField
	OrganizationID DepartmentDBSchemaField
}{

	ID:             DepartmentDBSchemaField("id"),
	CreatedAt:      DepartmentDBSchemaField("created_at"),
	UpdatedAt:      DepartmentDBSchemaField("updated_at"),
	DeletedAt:      DepartmentDBSchemaField("deleted_at"),
	Name:           DepartmentDBSchemaField("name"),
	Organization:   DepartmentDBSchemaField("organization"),
	OrganizationID: DepartmentDBSchemaField("organization_id"),
}

// Update updates Department fields by primary key
// nolint: dupl
func (o *Department) Update(db *gorm.DB, fields ...DepartmentDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":              o.ID,
		"created_at":      o.CreatedAt,
		"updated_at":      o.UpdatedAt,
		"deleted_at":      o.DeletedAt,
		"name":            o.Name,
		"organization":    o.Organization,
		"organization_id": o.OrganizationID,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Department %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// DepartmentUpdater is an Department updates manager
type DepartmentUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewDepartmentUpdater creates new Department updater
// nolint: dupl
func NewDepartmentUpdater(db *gorm.DB) DepartmentUpdater {
	return DepartmentUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Department{}),
	}
}

// ===== END of Department modifiers

// ===== BEGIN of query set OrganizationQuerySet

// OrganizationQuerySet is an queryset type for Organization
type OrganizationQuerySet struct {
	db *gorm.DB
}

// NewOrganizationQuerySet constructs new OrganizationQuerySet
func NewOrganizationQuerySet(db *gorm.DB) OrganizationQuerySet {
	return OrganizationQuerySet{
		db: db.Model(&Organization{}),
	}
}

func (qs OrganizationQuerySet) w(db *gorm.DB) OrganizationQuerySet {
	return NewOrganizationQuerySet(db)
}

// AddressEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) AddressEq(address string) OrganizationQuerySet {
	return qs.w(qs.db.Where("address = ?", address))
}

// AddressIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) AddressIn(address ...string) OrganizationQuerySet {
	if len(address) == 0 {
		qs.db.AddError(errors.New("must at least pass one address in AddressIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("address IN (?)", address))
}

// AddressNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) AddressNe(address string) OrganizationQuerySet {
	return qs.w(qs.db.Where("address != ?", address))
}

// AddressNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) AddressNotIn(address ...string) OrganizationQuerySet {
	if len(address) == 0 {
		qs.db.AddError(errors.New("must at least pass one address in AddressNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("address NOT IN (?)", address))
}

// All is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) All(ret *[]Organization) error {
	return qs.db.Find(ret).Error
}

// CodeEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CodeEq(code string) OrganizationQuerySet {
	return qs.w(qs.db.Where("code = ?", code))
}

// CodeIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CodeIn(code ...string) OrganizationQuerySet {
	if len(code) == 0 {
		qs.db.AddError(errors.New("must at least pass one code in CodeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("code IN (?)", code))
}

// CodeNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CodeNe(code string) OrganizationQuerySet {
	return qs.w(qs.db.Where("code != ?", code))
}

// CodeNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CodeNotIn(code ...string) OrganizationQuerySet {
	if len(code) == 0 {
		qs.db.AddError(errors.New("must at least pass one code in CodeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("code NOT IN (?)", code))
}

// Count is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Organization) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtEq(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtGt(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtGte(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtLt(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtLte(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) CreatedAtNe(createdAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Organization) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) Delete() error {
	return qs.db.Delete(Organization{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Organization{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Organization{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtEq(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtGt(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtGte(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtIsNotNull() OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtIsNull() OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtLt(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtLte(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) DeletedAtNe(deletedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// EmailEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) EmailEq(email string) OrganizationQuerySet {
	return qs.w(qs.db.Where("email = ?", email))
}

// EmailIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) EmailIn(email ...string) OrganizationQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email IN (?)", email))
}

// EmailNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) EmailNe(email string) OrganizationQuerySet {
	return qs.w(qs.db.Where("email != ?", email))
}

// EmailNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) EmailNotIn(email ...string) OrganizationQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email NOT IN (?)", email))
}

// FaxEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) FaxEq(fax string) OrganizationQuerySet {
	return qs.w(qs.db.Where("fax = ?", fax))
}

// FaxIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) FaxIn(fax ...string) OrganizationQuerySet {
	if len(fax) == 0 {
		qs.db.AddError(errors.New("must at least pass one fax in FaxIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("fax IN (?)", fax))
}

// FaxNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) FaxNe(fax string) OrganizationQuerySet {
	return qs.w(qs.db.Where("fax != ?", fax))
}

// FaxNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) FaxNotIn(fax ...string) OrganizationQuerySet {
	if len(fax) == 0 {
		qs.db.AddError(errors.New("must at least pass one fax in FaxNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("fax NOT IN (?)", fax))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GetUpdater() OrganizationUpdater {
	return NewOrganizationUpdater(qs.db)
}

// GradeEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeEq(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade = ?", grade))
}

// GradeGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeGt(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade > ?", grade))
}

// GradeGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeGte(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade >= ?", grade))
}

// GradeIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeIn(grade ...int8) OrganizationQuerySet {
	if len(grade) == 0 {
		qs.db.AddError(errors.New("must at least pass one grade in GradeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("grade IN (?)", grade))
}

// GradeLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeLt(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade < ?", grade))
}

// GradeLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeLte(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade <= ?", grade))
}

// GradeNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeNe(grade int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("grade != ?", grade))
}

// GradeNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) GradeNotIn(grade ...int8) OrganizationQuerySet {
	if len(grade) == 0 {
		qs.db.AddError(errors.New("must at least pass one grade in GradeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("grade NOT IN (?)", grade))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDEq(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDGt(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDGte(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDIn(ID ...uint) OrganizationQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDLt(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDLte(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDNe(ID uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) IDNotIn(ID ...uint) OrganizationQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) Limit(limit int) OrganizationQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MasterEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) MasterEq(master string) OrganizationQuerySet {
	return qs.w(qs.db.Where("master = ?", master))
}

// MasterIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) MasterIn(master ...string) OrganizationQuerySet {
	if len(master) == 0 {
		qs.db.AddError(errors.New("must at least pass one master in MasterIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("master IN (?)", master))
}

// MasterNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) MasterNe(master string) OrganizationQuerySet {
	return qs.w(qs.db.Where("master != ?", master))
}

// MasterNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) MasterNotIn(master ...string) OrganizationQuerySet {
	if len(master) == 0 {
		qs.db.AddError(errors.New("must at least pass one master in MasterNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("master NOT IN (?)", master))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) NameEq(name string) OrganizationQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) NameIn(name ...string) OrganizationQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) NameNe(name string) OrganizationQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) NameNotIn(name ...string) OrganizationQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) Offset(offset int) OrganizationQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs OrganizationQuerySet) One(ret *Organization) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByCreatedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByDeletedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByGrade is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByGrade() OrganizationQuerySet {
	return qs.w(qs.db.Order("grade ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByID() OrganizationQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByParentId is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByParentId() OrganizationQuerySet {
	return qs.w(qs.db.Order("parent_id ASC"))
}

// OrderAscByType is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByType() OrganizationQuerySet {
	return qs.w(qs.db.Order("type ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderAscByUpdatedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByCreatedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByDeletedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByGrade is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByGrade() OrganizationQuerySet {
	return qs.w(qs.db.Order("grade DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByID() OrganizationQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByParentId is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByParentId() OrganizationQuerySet {
	return qs.w(qs.db.Order("parent_id DESC"))
}

// OrderDescByType is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByType() OrganizationQuerySet {
	return qs.w(qs.db.Order("type DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) OrderDescByUpdatedAt() OrganizationQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// ParentIdEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdEq(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id = ?", parentId))
}

// ParentIdGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdGt(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id > ?", parentId))
}

// ParentIdGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdGte(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id >= ?", parentId))
}

// ParentIdIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdIn(parentId ...uint) OrganizationQuerySet {
	if len(parentId) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentId in ParentIdIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_id IN (?)", parentId))
}

// ParentIdLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdLt(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id < ?", parentId))
}

// ParentIdLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdLte(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id <= ?", parentId))
}

// ParentIdNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdNe(parentId uint) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_id != ?", parentId))
}

// ParentIdNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdNotIn(parentId ...uint) OrganizationQuerySet {
	if len(parentId) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentId in ParentIdNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_id NOT IN (?)", parentId))
}

// ParentIdsEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdsEq(parentIds string) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_ids = ?", parentIds))
}

// ParentIdsIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdsIn(parentIds ...string) OrganizationQuerySet {
	if len(parentIds) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentIds in ParentIdsIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_ids IN (?)", parentIds))
}

// ParentIdsNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdsNe(parentIds string) OrganizationQuerySet {
	return qs.w(qs.db.Where("parent_ids != ?", parentIds))
}

// ParentIdsNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIdsNotIn(parentIds ...string) OrganizationQuerySet {
	if len(parentIds) == 0 {
		qs.db.AddError(errors.New("must at least pass one parentIds in ParentIdsNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("parent_ids NOT IN (?)", parentIds))
}

// ParentIsNotNull is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIsNotNull() OrganizationQuerySet {
	return qs.w(qs.db.Where("parent IS NOT NULL"))
}

// ParentIsNull is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ParentIsNull() OrganizationQuerySet {
	return qs.w(qs.db.Where("parent IS NULL"))
}

// PhoneNumberEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PhoneNumberEq(phoneNumber string) OrganizationQuerySet {
	return qs.w(qs.db.Where("phone_number = ?", phoneNumber))
}

// PhoneNumberIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PhoneNumberIn(phoneNumber ...string) OrganizationQuerySet {
	if len(phoneNumber) == 0 {
		qs.db.AddError(errors.New("must at least pass one phoneNumber in PhoneNumberIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("phone_number IN (?)", phoneNumber))
}

// PhoneNumberNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PhoneNumberNe(phoneNumber string) OrganizationQuerySet {
	return qs.w(qs.db.Where("phone_number != ?", phoneNumber))
}

// PhoneNumberNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PhoneNumberNotIn(phoneNumber ...string) OrganizationQuerySet {
	if len(phoneNumber) == 0 {
		qs.db.AddError(errors.New("must at least pass one phoneNumber in PhoneNumberNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("phone_number NOT IN (?)", phoneNumber))
}

// PreloadArea is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PreloadArea() OrganizationQuerySet {
	return qs.w(qs.db.Preload("Area"))
}

// PreloadParent is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) PreloadParent() OrganizationQuerySet {
	return qs.w(qs.db.Preload("Parent"))
}

// SetAddress is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetAddress(address string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Address)] = address
	return u
}

// SetArea is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetArea(area Area) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Area)] = area
	return u
}

// SetCode is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetCode(code string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Code)] = code
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetCreatedAt(createdAt time.Time) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetDeletedAt(deletedAt *time.Time) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetEmail is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetEmail(email string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Email)] = email
	return u
}

// SetFax is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetFax(fax string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Fax)] = fax
	return u
}

// SetGrade is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetGrade(grade int8) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Grade)] = grade
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetID(ID uint) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.ID)] = ID
	return u
}

// SetMaster is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetMaster(master string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Master)] = master
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetName(name string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Name)] = name
	return u
}

// SetParentId is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetParentId(parentId uint) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.ParentId)] = parentId
	return u
}

// SetParentIds is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetParentIds(parentIds string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.ParentIds)] = parentIds
	return u
}

// SetPhoneNumber is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetPhoneNumber(phoneNumber string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.PhoneNumber)] = phoneNumber
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetType(typeValue int8) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.Type)] = typeValue
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetUpdatedAt(updatedAt time.Time) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetZipCode is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) SetZipCode(zipCode string) OrganizationUpdater {
	u.fields[string(OrganizationDBSchema.ZipCode)] = zipCode
	return u
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeEq(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type = ?", typeValue))
}

// TypeGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeGt(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type > ?", typeValue))
}

// TypeGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeGte(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type >= ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeIn(typeValue ...int8) OrganizationQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type IN (?)", typeValue))
}

// TypeLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeLt(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type < ?", typeValue))
}

// TypeLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeLte(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type <= ?", typeValue))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeNe(typeValue int8) OrganizationQuerySet {
	return qs.w(qs.db.Where("type != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) TypeNotIn(typeValue ...int8) OrganizationQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type NOT IN (?)", typeValue))
}

// Update is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u OrganizationUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtEq(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtGt(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtGte(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtLt(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtLte(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) UpdatedAtNe(updatedAt time.Time) OrganizationQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ZipCodeEq is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ZipCodeEq(zipCode string) OrganizationQuerySet {
	return qs.w(qs.db.Where("zip_code = ?", zipCode))
}

// ZipCodeIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ZipCodeIn(zipCode ...string) OrganizationQuerySet {
	if len(zipCode) == 0 {
		qs.db.AddError(errors.New("must at least pass one zipCode in ZipCodeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("zip_code IN (?)", zipCode))
}

// ZipCodeNe is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ZipCodeNe(zipCode string) OrganizationQuerySet {
	return qs.w(qs.db.Where("zip_code != ?", zipCode))
}

// ZipCodeNotIn is an autogenerated method
// nolint: dupl
func (qs OrganizationQuerySet) ZipCodeNotIn(zipCode ...string) OrganizationQuerySet {
	if len(zipCode) == 0 {
		qs.db.AddError(errors.New("must at least pass one zipCode in ZipCodeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("zip_code NOT IN (?)", zipCode))
}

// ===== END of query set OrganizationQuerySet

// ===== BEGIN of Organization modifiers

// OrganizationDBSchemaField describes database schema field. It requires for method 'Update'
type OrganizationDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f OrganizationDBSchemaField) String() string {
	return string(f)
}

// OrganizationDBSchema stores db field names of Organization
var OrganizationDBSchema = struct {
	ID          OrganizationDBSchemaField
	CreatedAt   OrganizationDBSchemaField
	UpdatedAt   OrganizationDBSchemaField
	DeletedAt   OrganizationDBSchemaField
	Parent      OrganizationDBSchemaField
	ParentId    OrganizationDBSchemaField
	ParentIds   OrganizationDBSchemaField
	Area        OrganizationDBSchemaField
	Code        OrganizationDBSchemaField
	Name        OrganizationDBSchemaField
	Type        OrganizationDBSchemaField
	Grade       OrganizationDBSchemaField
	Address     OrganizationDBSchemaField
	ZipCode     OrganizationDBSchemaField
	Master      OrganizationDBSchemaField
	PhoneNumber OrganizationDBSchemaField
	Fax         OrganizationDBSchemaField
	Email       OrganizationDBSchemaField
}{

	ID:          OrganizationDBSchemaField("id"),
	CreatedAt:   OrganizationDBSchemaField("created_at"),
	UpdatedAt:   OrganizationDBSchemaField("updated_at"),
	DeletedAt:   OrganizationDBSchemaField("deleted_at"),
	Parent:      OrganizationDBSchemaField("parent"),
	ParentId:    OrganizationDBSchemaField("parent_id"),
	ParentIds:   OrganizationDBSchemaField("parent_ids"),
	Area:        OrganizationDBSchemaField("area"),
	Code:        OrganizationDBSchemaField("code"),
	Name:        OrganizationDBSchemaField("name"),
	Type:        OrganizationDBSchemaField("type"),
	Grade:       OrganizationDBSchemaField("grade"),
	Address:     OrganizationDBSchemaField("address"),
	ZipCode:     OrganizationDBSchemaField("zip_code"),
	Master:      OrganizationDBSchemaField("master"),
	PhoneNumber: OrganizationDBSchemaField("phone_number"),
	Fax:         OrganizationDBSchemaField("fax"),
	Email:       OrganizationDBSchemaField("email"),
}

// Update updates Organization fields by primary key
// nolint: dupl
func (o *Organization) Update(db *gorm.DB, fields ...OrganizationDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"parent":       o.Parent,
		"parent_id":    o.ParentId,
		"parent_ids":   o.ParentIds,
		"area":         o.Area,
		"code":         o.Code,
		"name":         o.Name,
		"type":         o.Type,
		"grade":        o.Grade,
		"address":      o.Address,
		"zip_code":     o.ZipCode,
		"master":       o.Master,
		"phone_number": o.PhoneNumber,
		"fax":          o.Fax,
		"email":        o.Email,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Organization %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// OrganizationUpdater is an Organization updates manager
type OrganizationUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewOrganizationUpdater creates new Organization updater
// nolint: dupl
func NewOrganizationUpdater(db *gorm.DB) OrganizationUpdater {
	return OrganizationUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Organization{}),
	}
}

// ===== END of Organization modifiers

// ===== END of all query sets
